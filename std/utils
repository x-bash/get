# shellcheck shell=bash

@src std/str

# Not good
X_CMD_COM_RETURN=""
@ret(){
    export X_CMD_COM_RETURN="$*"
}

@res(){
    echo "$X_CMD_COM_RETURN"
}

# WCSS #8
echon(){
    printf "%s" "$*"
}

# Normally, output the progress
@log(){ echo "$*" >&2; } # fine
@fatal(){ echo "$*" >&2; exit; } # error

# Normally, output info, json or yml
@out(){ echo "$*" >&1; }


# str.trim(){
#     local var="$*"
#     # remove leading whitespace characters
#     var="${var#"${var%%[![:space:]]*}"}"
#     # remove trailing whitespace characters
#     var="${var%"${var##*[![:space:]]}"}"   
#     echo -n "$var"
# }


# str.lower(){ echo -n $1 | tr [:upper:] [:lower:]; }


# Protected folders

rmrf(){
    for i in "$@"; do
        local tgt
        tgt="$(str.trim "$i")"
        [ "$tgt" == "" ] && continue

        # TODO: add other patterns
        if [ "$tgt" == "/" ]; then
            yesno "WARNING: Sure of removing '$tgt': " || continue
        fi

        rm -rf "$i"
    done
}

# fp

# In linux, `readlink -f <filepath>`. Not works in BSD system
# https://superuser.com/questions/330199/how-get-full-path-to-target-of-link

readlink.fullpath(){
    local TGT=${1:?"Provide name"}
    local ORI A RES
    ORI=$(pwd)
    A=$(readlink "$TGT")
    cd "$(dirname "$TGT")" && cd "$(dirname "$A")" || return 1
    RES=$(pwd)
    cd "$ORI" && echo "$RES/$(basename "$A")"
}


# rand

# TODO: padding zero in the beginning
rand.int(){
    local ST=${1:?start number}
    local EN=${2:?end number}

    local SIZE=${3:-0}

    printf "%0${SIZE}d" $(( ( RANDOM % (EN-ST) )  + ST ))
}

rand.float(){
    noop
}

rand.str(){
    noop
}


# Cookbook 1.15
# like watch command
try(){ while :; do "$@"; sleep "${INTERVAL:-3}"; done }
try.until.success(){ while :; do "$@" && return; sleep "${INTERVAL:-3}"; done }

loop(){
    for i in $(seq "${time:-3}"); do
        eval "$*"
    done
}

# Using X, or using curl to include method

# WCSS #80
title(){
    if [ $# -eq 0 ]; then
        echo "Usage: $0 <title to display>" >&2
    else
        echo -e "\033]0;$*\007"
    fi
}


